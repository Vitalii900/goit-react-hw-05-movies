{"version":3,"file":"static/js/852.c7328051.chunk.js","mappings":"8SAEMA,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,YAFpB,cAEGG,EAFH,OAKGC,EAAgBD,EAASE,KAL5B,kBAOID,GAPJ,gCASHE,QAAQC,MAAR,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBAC+BT,EAD/B,oBAFpB,cAEGG,EAFH,OAKGO,EAAcP,EAASE,KAL1B,kBAOIK,GAPJ,gCASHJ,QAAQC,MAAR,MATG,gFAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,EADvC,oBAFpB,cAEGG,EAFH,OAKGS,EAAaT,EAASE,KALzB,kBAOIO,GAPJ,gCASHN,QAAQC,MAAR,MATG,gFAaA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,EADvC,2BAFpB,cAEGG,EAFH,OAKGW,EAAgBX,EAASE,KAL5B,kBAMIS,GANJ,gCAQHR,QAAQC,MAAR,MARG,gFAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAEoBd,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,4DACuFgB,IAH3G,cAEGb,EAFH,OAKGc,EAAqBd,EAASE,KALjC,kBAOIY,GAPJ,gCASHX,QAAQC,MAAR,MATG,gF,qHCvDMW,EAAa,SAAC,GAGzB,OAHyC,EAAdC,QAGZC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASb,EAAS,EAATA,GACrC,OACE,2BACE,oCAAYY,MACZ,uBAAIC,MAFGb,EAKZ,GACF,E,SCTYc,E,OAAOC,EAAAA,GAAH,iECwBjB,EApBgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MACAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAWY,GAASM,KAAKF,EAC1B,GAAE,CAACJ,IAEJ,IAAQO,EAAyBJ,EAAzBI,QAASC,EAAgBL,EAAhBK,YAEjB,OACE,SAACV,EAAD,UACGU,GACC,SAACf,EAAD,CAAYC,QAASa,KAErB,qEAIP,C","sources":["components/API.jsx","components/ReviewsList.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '197007a676a4d3e84c6bdb6f21b18a1a';\n\nexport async function trendingMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=1`\n    );\n    const arrayOfMovies = response.data;\n    // console.log(arrayOfMovies);\n    return arrayOfMovies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    const movieDetail = response.data;\n    // console.log(movieDetail);\n    return movieDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    const castDetail = response.data;\n    // console.log(castDetail);\n    return castDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    const reviewsDetail = response.data;\n    return reviewsDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getSearchMovie(name) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n    );\n    const arrayOfSearchMovie = response.data;\n    // console.log(arrayOfSearchMovie);\n    return arrayOfSearchMovie;\n  } catch (error) {\n    console.error(error);\n  }\n}","export const ReviewList = ({ reviews }) => {\n  // console.log(reviews);\n\n  return reviews.map(({ author, content, id }) => {\n    return (\n      <li key={id}>\n        <p>Author: {author}</p>\n        <p>{content}</p>\n      </li>\n    );\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 0;\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../API';\nimport { ReviewList } from '../ReviewsList';\nimport { List } from '../Reviews/Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [aboutReviews, setAboutReviews] = useState([]);\n  useEffect(() => {\n    getReviews(movieId).then(setAboutReviews);\n  }, [movieId]);\n\n  const { results, total_pages } = aboutReviews;\n\n  return (\n    <List>\n      {total_pages ? (\n        <ReviewList reviews={results}></ReviewList>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </List>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","trendingMovies","axios","response","arrayOfMovies","data","console","error","getMovieById","id","movieDetail","getCast","castDetail","getReviews","reviewsDetail","getSearchMovie","name","arrayOfSearchMovie","ReviewList","reviews","map","author","content","List","styled","movieId","useParams","useState","aboutReviews","setAboutReviews","useEffect","then","results","total_pages"],"sourceRoot":""}