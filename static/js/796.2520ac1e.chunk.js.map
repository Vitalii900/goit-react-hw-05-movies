{"version":3,"file":"static/js/796.2520ac1e.chunk.js","mappings":"8SAEMA,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,YAFpB,cAEGG,EAFH,OAKGC,EAAgBD,EAASE,KAL5B,kBAOID,GAPJ,gCASHE,QAAQC,MAAR,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBAC+BT,EAD/B,oBAFpB,cAEGG,EAFH,OAKGO,EAAcP,EAASE,KAL1B,kBAOIK,GAPJ,gCASHJ,QAAQC,MAAR,MATG,gFAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,EADvC,oBAFpB,cAEGG,EAFH,OAKGS,EAAaT,EAASE,KALzB,kBAOIO,GAPJ,gCASHN,QAAQC,MAAR,MATG,gFAaA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,EADvC,2BAFpB,cAEGG,EAFH,OAKGW,EAAgBX,EAASE,KAL5B,kBAMIS,GANJ,gCAQHR,QAAQC,MAAR,MARG,gFAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAEoBd,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,4DACuFgB,IAH3G,cAEGb,EAFH,OAKGc,EAAqBd,EAASE,KALjC,kBAOIY,GAPJ,gCASHX,QAAQC,MAAR,MATG,gF,gICrDMW,EAAWC,EAAAA,EAAAA,GAAH,yC,SCCRC,EAAW,SAAC,GAGvB,OAHsC,EAAbC,OACjBC,KAEIC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWR,EAA6B,EAA7BA,KAAMS,EAAuB,EAAvBA,aAAchB,EAAS,EAATA,GAC1CiB,EAAQ,8CAA0CD,GACxD,OACE,UAACP,EAAD,YACE,gBACES,IAAKF,EAAeC,EAAW,8BAC/BE,IAAKZ,KAEP,uBAAIA,KACJ,uCAAeQ,OANFf,EASlB,GACF,ECjBYoB,EAAOV,EAAAA,EAAAA,GAAH,0ICmBjB,EAfa,WACX,IAAQW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRxB,EAAAA,EAAAA,IAAQmB,GAASM,KAAKF,EACvB,GAAE,CAACJ,KAGF,SAACD,EAAD,UACwB,IAArBI,EAAUI,SAAgB,SAACjB,EAAD,CAAUC,OAAQY,KAGlD,C","sources":["components/API.jsx","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '197007a676a4d3e84c6bdb6f21b18a1a';\n\nexport async function trendingMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=1`\n    );\n    const arrayOfMovies = response.data;\n    // console.log(arrayOfMovies);\n    return arrayOfMovies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    const movieDetail = response.data;\n    // console.log(movieDetail);\n    return movieDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    const castDetail = response.data;\n    // console.log(castDetail);\n    return castDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    const reviewsDetail = response.data;\n    return reviewsDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getSearchMovie(name) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n    );\n    const arrayOfSearchMovie = response.data;\n    // console.log(arrayOfSearchMovie);\n    return arrayOfSearchMovie;\n  } catch (error) {\n    console.error(error);\n  }\n}","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  width: 200px;\n`;","import { ListItem } from '../CastList/CastList.styled';\nimport PropTypes from 'prop-types';\n\nexport const CastList = ({ actors }) => {\n  const { cast } = actors;\n\n  return cast.map(({ character, name, profile_path, id }) => {\n    const imageURL = `https://www.themoviedb.org/t/p/w200/${profile_path}`;\n    return (\n      <ListItem key={id}>\n        <img\n          src={profile_path ? imageURL : 'http://placehold.it/200x300'}\n          alt={name}\n        />\n        <p>{name}</p>\n        <p>Character: {character}</p>\n      </ListItem>\n    );\n  });\n};\n\nCastList.propTypes = {\n  actors: PropTypes.shape({\n    cast: PropTypes.arrayOf(\n      PropTypes.shape({\n        character: PropTypes.string,\n        name: PropTypes.string,\n        profile_path: PropTypes.string,\n        id: PropTypes.number,\n      })\n    ),\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  list-style: none;\n  padding-left: 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../API';\nimport { CastList } from '../CastList/CastList';\nimport { List } from '../Cast/Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [aboutCast, setAboutCast] = useState([]);\n  // console.log(movieId);\n  useEffect(() => {\n    getCast(movieId).then(setAboutCast);\n  }, [movieId]);\n\n  return (\n    <List>\n      {aboutCast.length !== 0 && <CastList actors={aboutCast}></CastList>}\n    </List>\n  );\n};\n\nexport default Cast;\n"],"names":["KEY","trendingMovies","axios","response","arrayOfMovies","data","console","error","getMovieById","id","movieDetail","getCast","castDetail","getReviews","reviewsDetail","getSearchMovie","name","arrayOfSearchMovie","ListItem","styled","CastList","actors","cast","map","character","profile_path","imageURL","src","alt","List","movieId","useParams","useState","aboutCast","setAboutCast","useEffect","then","length"],"sourceRoot":""}