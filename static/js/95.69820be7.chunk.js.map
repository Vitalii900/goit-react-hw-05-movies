{"version":3,"file":"static/js/95.69820be7.chunk.js","mappings":"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","sources":["components/API.jsx","components/GenresList/GenresList.styled.jsx","components/GenresList/GenresList.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '197007a676a4d3e84c6bdb6f21b18a1a';\n\nexport async function trendingMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=1`\n    );\n    const arrayOfMovies = response.data;\n    // console.log(arrayOfMovies);\n    return arrayOfMovies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    const movieDetail = response.data;\n    // console.log(movieDetail);\n    return movieDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    const castDetail = response.data;\n    // console.log(castDetail);\n    return castDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    const reviewsDetail = response.data;\n    return reviewsDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getSearchMovie(name) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n    );\n    const arrayOfSearchMovie = response.data;\n    // console.log(arrayOfSearchMovie);\n    return arrayOfSearchMovie;\n  } catch (error) {\n    console.error(error);\n  }\n}","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n  padding-left: 0;\n  list-style: none;\n`;","import { List } from '../GenresList/GenresList.styled';\nimport PropTypes from 'prop-types';\n\nexport const GenresList = ({ genres }) => {\n  return (\n    <List>\n      {genres.map(({ id, name }) => (\n        <li key={id}>{name}</li>\n      ))}\n    </List>\n  );\n};\n\nGenresList.propTypes = {\n  genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.number,\n      }))\n};","import styled from '@emotion/styled';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nconst BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #5f5fa8;\n  }\n`;\n\nexport const BackLinkButton = ({ to, children }) => {\n  return (\n    <BackLink to={to}>\n      <HiArrowLeft size=\"20\" />\n      {children}\n    </BackLink>\n  );\n};\n\nexport const Image = styled.img`\n  width: 200px;\n  height: auto;\n`\n\nexport const ContentConteiner = styled.div`\n  display: flex;\n  gap: 20px;\n  border-bottom: 1px solid black;\n`;\n\n\nexport const AdditionalLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  margin-right: 10px;\n  font-weight: 500;\n\n  :hover {\n    color: #5f5fa8;\n  }\n`;\n\nexport const AditionalContainer = styled.div`\n  border-bottom: 1px solid black;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieById } from '../../components/API';\nimport { GenresList } from '../../components/GenresList/GenresList';\nimport {\n  BackLinkButton,\n  Image,\n  ContentConteiner,\n  AdditionalLink,\n  AditionalContainer,\n} from '../MovieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [aboutMovie, setAboutMovie] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId).then(setAboutMovie);\n  }, [movieId]);\n\n  const imageURL = `https://www.themoviedb.org/t/p/w500/${aboutMovie.poster_path}`;\n  const { genres, poster_path, title, overview, release_date, vote_average } =\n    aboutMovie;\n\n  return (\n    <main>\n      <BackLinkButton to={location.state?.from ?? '/'}>Back</BackLinkButton>\n      <ContentConteiner>\n        <Image src={poster_path && imageURL} alt={title} />\n        <div>\n          <h2>\n            {title} ({release_date && release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {vote_average && vote_average.toFixed(1)}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          {genres?.length > 0 && <h3>Genres</h3>}\n          {genres?.length > 0 && <GenresList genres={genres}></GenresList>}\n        </div>\n      </ContentConteiner>\n      <AditionalContainer>\n        <h3>Aditional information</h3>\n        <AdditionalLink to=\"cast\" state={{ from: location.state?.from }}>\n          Cast\n        </AdditionalLink>\n        <AdditionalLink to=\"reviews\" state={{ from: location.state?.from }}>\n          Reviews\n        </AdditionalLink>\n      </AditionalContainer>\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","trendingMovies","axios","response","arrayOfMovies","data","console","error","getMovieById","id","movieDetail","getCast","castDetail","getReviews","reviewsDetail","getSearchMovie","name","arrayOfSearchMovie","List","styled","GenresList","genres","map","BackLink","Link","BackLinkButton","to","children","size","Image","ContentConteiner","AdditionalLink","AditionalContainer","movieId","useParams","useState","aboutMovie","setAboutMovie","location","useLocation","useEffect","then","imageURL","poster_path","title","overview","release_date","vote_average","state","from","src","alt","slice","toFixed","length","Suspense","fallback"],"sourceRoot":""}