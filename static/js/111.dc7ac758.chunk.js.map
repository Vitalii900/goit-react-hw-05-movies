{"version":3,"file":"static/js/111.dc7ac758.chunk.js","mappings":"8SAEMA,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,YAFpB,cAEGG,EAFH,OAKGC,EAAgBD,EAASE,KAL5B,kBAOID,GAPJ,gCASHE,QAAQC,MAAR,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBAC+BT,EAD/B,oBAFpB,cAEGG,EAFH,OAKGO,EAAcP,EAASE,KAL1B,kBAOIK,GAPJ,gCASHJ,QAAQC,MAAR,MATG,gFAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,EADvC,oBAFpB,cAEGG,EAFH,OAKGS,EAAaT,EAASE,KALzB,kBAOIO,GAPJ,gCASHN,QAAQC,MAAR,MATG,gFAaA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,kGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCT,EADvC,2BAFpB,cAEGG,EAFH,OAKGW,EAAgBX,EAASE,KAL5B,kBAMIS,GANJ,gCAQHR,QAAQC,MAAR,MARG,gFAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAEoBd,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,4DACuFgB,IAH3G,cAEGb,EAFH,OAKGc,EAAqBd,EAASE,KALjC,kBAOIY,GAPJ,gCASHX,QAAQC,MAAR,MATG,gF,0ICpDMW,EAAOC,EAAAA,EAAAA,GAAH,iEAKJC,EAAWD,EAAAA,EAAAA,GAAH,2CAIRE,GAAWF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,2G,SCRRI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,YAAkC,IAA/BC,EAA8B,EAA9BA,MAAOnB,EAAuB,EAAvBA,GAAIoB,EAAmB,EAAnBA,aACxB,OACE,SAACT,EAAD,WACE,UAACC,EAAD,CAAUS,GAAE,UAAKrB,GAAMsB,MAAO,CAAEC,KAAMP,GAAtC,UACGG,EADH,KACYC,EAAaI,MAAM,EAAG,GADlC,QADaxB,EAMlB,KAGN,ECuBD,EArCe,WAAO,IAAD,EACnB,GAAwCyB,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAI,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAEzCC,EAAAA,EAAAA,YAAU,WACK,KAATF,IAGJzB,EAAAA,EAAAA,IAAeyB,GAAMG,KAAKP,EAC3B,GAAE,CAACI,IAEJ,IASQI,EAA2BT,EAA3BS,QAASC,EAAkBV,EAAlBU,cAEjB,OACE,6BACE,kBAAMC,SAbS,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBX,EAC+B,KAA7BU,EAAKE,SAASX,KAAKY,MAAe,CAAEZ,KAAMS,EAAKE,SAASX,KAAKY,OAAU,CAAC,GAE1EH,EAAKI,OACN,EAMG,WACE,4BACE,kBAAOrC,KAAK,OAAOsC,KAAK,YAE1B,mBAAQA,KAAK,SAAb,uBAEDT,EAAgB,IAAK,SAACtB,EAAD,CAAYC,OAAQoB,IACvB,IAAlBC,IAAuB,kEAG7B,C","sources":["components/API.jsx","components/SearchList/SearchList.styled.jsx","components/SearchList/SearchList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '197007a676a4d3e84c6bdb6f21b18a1a';\n\nexport async function trendingMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&page=1`\n    );\n    const arrayOfMovies = response.data;\n    // console.log(arrayOfMovies);\n    return arrayOfMovies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    const movieDetail = response.data;\n    // console.log(movieDetail);\n    return movieDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    const castDetail = response.data;\n    // console.log(castDetail);\n    return castDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    const reviewsDetail = response.data;\n    return reviewsDetail;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getSearchMovie(name) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n    );\n    const arrayOfSearchMovie = response.data;\n    // console.log(arrayOfSearchMovie);\n    return arrayOfSearchMovie;\n  } catch (error) {\n    console.error(error);\n  }\n}","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding-left: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 5px 0;\n`;\n\nexport const ListLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n\n  :hover {\n    color: #5f5fa8;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport { List, ListItem, ListLink } from '../SearchList/SearchList.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ title, id, release_date }) => {\n        return (\n          <ListItem key={id}>\n            <ListLink to={`${id}`} state={{ from: location }}>\n              {title} ({release_date.slice(0, 4)})\n            </ListLink>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nSearchList.propTypes = {\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from '../components/API';\nimport { SearchList } from '../components/SearchList/SearchList';\n\nconst Movies = () => {\n  const [arrayOfMovie, setArrayOfMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const find = searchParams.get('find') ?? '';\n\n  useEffect(() => {\n    if (find === '') {\n      return;\n    }\n    getSearchMovie(find).then(setArrayOfMovie);\n  }, [find]);\n\n  const inputValue = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams(\n      form.elements.find.value !== '' ? { find: form.elements.find.value } : {}\n    );\n    form.reset();\n  };\n\n  const { results, total_results } = arrayOfMovie;\n\n  return (\n    <main>\n      <form onSubmit={inputValue}>\n        <label>\n          <input name=\"find\" type=\"text\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {total_results > 0 && <SearchList movies={results}></SearchList>}\n      {total_results === 0 && <p>We don`t have a movie with this name</p>}\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["KEY","trendingMovies","axios","response","arrayOfMovies","data","console","error","getMovieById","id","movieDetail","getCast","castDetail","getReviews","reviewsDetail","getSearchMovie","name","arrayOfSearchMovie","List","styled","ListItem","ListLink","Link","SearchList","movies","location","useLocation","map","title","release_date","to","state","from","slice","useState","arrayOfMovie","setArrayOfMovie","useSearchParams","searchParams","setSearchParams","find","get","useEffect","then","results","total_results","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type"],"sourceRoot":""}